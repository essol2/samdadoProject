<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper 
PUBLIC "-//mybatis.org//DTD Mapepr 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="adminMapper">
	<resultMap type="QnA" id="qnaResultSet">
		<id property="qnano" column="QNA_NO" />
		<result property="qcont" column="QCONT" />
		<result property="qdate" column="QDATE" />
		<result property="qtodate" column="QTODATE" /> <!-- TO_CHAR 포멧팅을 위한 컬럼 -->	
		<result property="qreply" column="QREPLY" />
		<result property="qstatus" column="QSTATUS" />
		<result property="usno" column="US_NO" />	
		<!-- USER 테이블 조인을 위한 필드 -->
		<result property="usname" column="US_NAME" />	
	</resultMap>
	
	<resultMap type="Report" id="reportResultSet">
		<id property="report_no" column="REPORT_NO" />
		<result property="rep_res" column="REP_RES" />
		<result property="rep_cont" column="REP_CONT" />
		<result property="rdate" column="RDATE" />
		<result property="rtodate" column="RTODATE" /> <!-- TO_CHAR 포멧팅을 위한 컬럼 -->	
		<result property="rstatus" column="RSTATUS" />
		<result property="rexdate" column="REXDATE" />
		<result property="retodate" column="RETODATE" /> <!-- TO_CHAR 포멧팅을 위한 컬럼 -->	
		<result property="r_img_path" column="R_IMG_PATH" />
		<result property="r_img_name" column="R_IMG_NAME" />
		<result property="r_img_cname" column="R_IMG_CNAME" />
		<result property="usno" column="US_NO" />			      <!-- USER 테이블 조인 -->
		<result property="r_count" column="R_COUNT" />
		<result property="bus_code" column="REF_BUS_CODE" />      <!-- BUSINESS 테이블 조인 -->
		<!-- USER 테이블 조인을 위한 필드 -->
		<result property="usname" column="US_NAME" />	
	</resultMap>
	
	<resultMap type="Business" id="businessResultSet">
		<id property="bus_code" column="BUS_CODE" />
		<result property="us_no" column="US_NO" />
		<result property="bus_name" column="BUS_NAME" />
		<result property="bus_address" column="BUS_ADDRESS" />
		<result property="bus_intro" column="BUS_INTRO" />
		<result property="bus_date" column="BUS_DATE" />
		<result property="bus_modify" column="BUS_MODIFY" />
		<result property="ad_count" column="AD_COUNT" />
		<result property="bus_classify" column="BUS_CLASSIFY" />
		<result property="bus_category" column="BUS_CATEGORY" />
		<result property="bus_status" column="BUS_STATUS" />
		<result property="bus_phone" column="BUS_PHONE" />
		<result property="res_category" column="RES_CATEGORY"/>
		<result property="hotel_category" column="HOTEL_CATEGORY" />
		<result property="tour_category" column="TOUR_CATEGORY" />
		<result property="tour_tema" column="TOUR_TEMA" />
		<result property="al_no" column="AL_NO" />
		<result property="bus_opening" column="BUS_OPENING" />
		<!-- USER 테이블 조인을 위한 필드 -->
		<result property="usname" column="US_NAME" />	
	</resultMap>
	
	<resultMap type="Alliance" id="AllianceResultSet">
		<id property="alno" column="AL_NO" />
		<result property="alintro" column="AL_INTRO" />
		<result property="alsubdate" column="AL_SUBDATE" />
		<result property="altodate" column="ALTODATE" /> <!-- TO_CHAR 포멧팅을 위한 컬럼 -->	
		<result property="startdate" column="START_DATE" />
		<result property="alstatus" column="ALSTATUS" />
		<result property="aimgpath" column="A_IMG_PATH" />
		<result property="aimgname" column="A_IMG_NAME" />
		<result property="aimgcname" column="A_IMG_CNAME" />
		<result property="amassage" column="A_MASSAGE" />
		<result property="usno" column="US_NO" />
		<result property="bus_code" column="BUS_CODE" />
		<!-- USER 테이블 조인을 위한 필드 -->
		<result property="usname" column="US_NAME" />	
		<!-- INCOME 테이블 조인을 위한 필드 -->
		<result property="amount" column="amount" />	
		<!-- BUSINESS 테이블 조인을 위한 필드 -->
		<result property="bus_category" column="BUS_CATEGORY" />	
		<!-- POINT 테이블 조인을 위한 필드 -->
		<result property="pbalance" column="PBALANCE" />
	</resultMap>
	
	<resultMap type="Income" id="IncomeResultSet">
		<id property="payno" column="PAY_NO" />
		<result property="item" column="ITEM" />
		<result property="amount" column="AMOUNT" />
		<result property="pdate" column="PDATE" />
		<result property="ptodate" column="PTODATE" /> <!-- TO_CHAR 포멧팅을 위한 컬럼 -->	
		<result property="exdate" column="EXDATE" />
		<result property="pextodate" column="PEXTODATE" /> <!-- TO_CHAR 포멧팅을 위한 컬럼 -->	
		<result property="usno" column="US_NO" />
		<!-- USER 테이블 조인을 위한 필드 -->
		<result property="usname" column="US_NAME" />
		<!-- BUSINESS 테이블 조인을 위한 필드 -->
		<result property="bus_code" column="BUS_CODE" />
	</resultMap>
	
	<resultMap type="Point" id="pointResultSet">
		<id property="pno" column="PNO" />
		<result property="pdate" column="PDATE" />
		<result property="pdetail" column="PDETAIL" />
		<result property="pbalance" column="PBALANCE" />
		<result property="pamount" column="PAMOUNT" />
		<result property="usno" column="US_NO" />
		<!-- USER 테이블 조인을 위한 필드 -->
		<result property="usname" column="US_NAME" />
		<!-- BUSINESS 테이블 조인을 위한 필드 -->
		<result property="bus_category" column="BUS_CATEGORY" />	
	</resultMap>
	
	<select id="selectAdminMainQnaSelect" resultMap="qnaResultSet">
		SELECT *
		  FROM
              (SELECT "QNA_NO", QCONT, US_NAME
               FROM "QnA", "USER"
               WHERE  "QnA".US_NO = "USER".US_NO
           AND QSTATUS = 'N'	<!-- 미답변만 select -->
               ORDER BY "QNA_NO")
		 WHERE 
		       ROWNUM <![CDATA[<=]]> 10 <!-- admin 메인 페이지에 10개의 qna 만 보이도록 limit절 처리 -->
	</select>	
	
	<select id="adminQnaSelect" resultMap="qnaResultSet">
        SELECT *
          FROM "QnA", "USER"
         WHERE "QnA".US_NO = "USER".US_NO
   AND QSTATUS = 'N'	<!-- 미답변만 select -->
      ORDER BY "QNA_NO"
	</select>	
	
	<update id="insertQnaReply" parameterType="QnA">
		UPDATE "QnA"
		   SET
			   QREPLY = #{qreply},
			   QSTATUS = 'Y'
	     WHERE
	     	   QNA_NO = #{qnano}
	</update>
	
	<select id="countQnA" resultType="_int">
		SELECT 
			  COUNT(*)
		  FROM
		       "QnA"
         WHERE
               QSTATUS = 'N'
	</select>
	
	<select id="searchQnaList" parameterType="aSearch" resultMap="qnaResultSet">
	<bind name="sv" value="'%' + _parameter.getSearchValue() + '%'"/> 
		SELECT 
				  QNA_NO
				, QCONT
				, TO_CHAR(QDATE, 'YYYY-MM-DD') AS QTODATE
				, QREPLY
				, QSTATUS
				, "QnA".US_NO
				, US_NAME
			FROM
				 "QnA", "USER"	
		<where>
				 "QnA".US_NO = "USER".US_NO 
			<choose>
				<when test="searchCondition == 'qnano'">
					AND "QNA_NO" LIKE #{sv}
				</when>
				<when test="searchCondition == 'qcont'">
					AND QCONT LIKE #{sv}
				</when>
				<when test="searchCondition == 'qdate'">
					AND QDATE LIKE #{sv}
				</when>
				<when test="searchCondition == 'qreply'">
					AND QREPLY LIKE #{sv}
				</when>
				<when test="searchCondition == 'qstatus'">
					AND QSTATUS LIKE #{sv}
				</when>
				<when test="searchCondition == 'usno'">
					AND "QnA".US_NO LIKE #{sv}
				</when>
				<when test="searchCondition == 'usname'">
					AND US_NAME LIKE #{sv}
				</when>
				<otherwise>
					AND ("QNA_NO" LIKE #{sv}
						 OR QCONT LIKE #{sv}
						 OR QDATE LIKE #{sv}
						 OR QREPLY LIKE #{sv}
						 OR QSTATUS LIKE #{sv}
						 OR "QnA".US_NO LIKE #{sv}
						 OR US_NAME LIKE #{sv})
				</otherwise>	
			</choose>
		</where>
			  ORDER BY "QNA_NO"
	</select>
	
	<select id="adminReportSelect" resultMap="reportResultSet">
			SELECT 
					REPORT_NO,
					REPORT.US_NO,
					"USER".US_NAME,
					REP_RES,
					REP_CONT,
					RDATE,
					RSTATUS,
					REXDATE,
					R_IMG_PATH,
					R_IMG_NAME,
					R_IMG_CNAME,
					R_COUNT,
					REF_BUS_CODE
			FROM REPORT, "USER"
			WHERE REPORT.US_NO = "USER".US_NO
			AND RSTATUS = 'N'
			ORDER BY RDATE
	</select>
	
	<update id="updateRstatusToY" parameterType="Report">
		UPDATE REPORT
		   SET
			   RSTATUS = 'Y',
			   R_COUNT = R_COUNT + 1
	     WHERE
	     	   REPORT_NO = #{report_no}
	       AND REF_BUS_CODE = #{bus_code}
	</update>
	
	<update id="updateRstatusToR" parameterType="Report">
		UPDATE REPORT
		   SET
			   RSTATUS = 'R'
	     WHERE
	     	   REPORT_NO = #{report_no}
	       AND REF_BUS_CODE = #{bus_code}
	</update>
	
	<update id="updateRstatusToYAndRexdate" parameterType="Report">
		UPDATE REPORT
		   SET
			   RSTATUS = 'Y',
			   R_COUNT = R_COUNT + 1,	
			   REXDATE = SYSDATE + 7
	     WHERE
	     	   REPORT_NO = #{report_no}
	       AND REF_BUS_CODE = #{bus_code}
	</update>
	
	
	<select id="adminMainBusinessSelect" resultMap="businessResultSet">
		SELECT *
		  FROM
              (SELECT US_NAME, BUS_NAME, BUS_CODE, BUS_ADDRESS, BUS_CATEGORY 
               FROM BUSINESS, "USER"
               WHERE BUSINESS.US_NO = "USER".US_NO
               ORDER BY BUS_DATE)
		 WHERE 
		       ROWNUM <![CDATA[<=]]> 10 <!-- admin 메인 페이지에 10개의 신규사업장만 보이도록 limit절 처리 -->
	</select>
	
	<select id="countAd1" resultType="_int">	
		SELECT 
			  COUNT(*)	
		  FROM
		      ALLIANCE
		 WHERE
		      ALSTATUS = 'N'
	</select>	

	<select id="adminbannerAdSelect" resultMap="AllianceResultSet">
		 SELECT
                 ALLIANCE.AL_NO,
                 "USER".US_NAME,
                 "POINT".PBALANCE,
                 BUSINESS.BUS_CATEGORY,
                 BUSINESS.BUS_CODE,
                 AL_INTRO,
                 AL_SUBDATE,
                 ALSTATUS,
                 START_DATE,
                 A_IMG_PATH,
                 A_IMG_NAME,
                 A_IMG_CNAME,
                 A_MASSAGE,
                 ALLIANCE.US_NO
		FROM    
                 ALLIANCE,  "USER", BUSINESS, "POINT"
        WHERE 	 ALLIANCE.US_NO = "USER".US_NO
        AND      BUSINESS.BUS_CODE = ALLIANCE.BUS_CODE
        AND      "POINT".US_NO(+) = ALLIANCE.US_NO
		AND      ALSTATUS = 'N'
	</select>
	
	<update id="updateAdmitBannerAdStatus" parameterType="Alliance">
		UPDATE 
			   ALLIANCE
		   SET
			   ALSTATUS = 'Y',
			   START_DATE = SYSDATE + 3
	     WHERE
	     	   AL_NO = #{ alno }
	       AND BUS_CODE = #{ bus_code }
	</update>
	
	<update id="updateRejectBannerAdStatusRI" parameterType="Alliance">
		UPDATE 
			   ALLIANCE
		   SET
			   ALSTATUS = 'RI',
			   A_MASSAGE = #{ amassage }
	     WHERE
	     	   AL_NO = #{ alno }
	       AND BUS_CODE = #{ bus_code }
	</update>
	
	<update id="updateRejectBannerAdStatusRP" parameterType="Alliance">
		UPDATE 
			   ALLIANCE
		   SET
			   ALSTATUS = 'RP',
			   A_MASSAGE = #{ amassage }
	     WHERE
	     	   AL_NO = #{ alno }
	       AND BUS_CODE = #{ bus_code }
	</update>
	
	<select id="searchReportList" parameterType="aSearch" resultMap="reportResultSet">
	<bind name="sv" value="'%' + _parameter.getSearchValue() + '%'"/> 
		SELECT 
				  REPORT_NO
				, REPORT.US_NO
				, REP_CONT
				, TO_CHAR(RDATE,'YYYY-MM-DD') AS RTODATE
				, RSTATUS
				, TO_CHAR(REXDATE,'YYYY-MM-DD') RETODATE
				, US_NAME
				, REF_BUS_CODE
				, R_IMG_PATH
				, R_IMG_NAME
				, R_IMG_CNAME
		FROM 
				  REPORT, "USER"
		<where>
			REPORT.US_NO = "USER".US_NO <!-- 테이블 조인 -->
			<choose>
				<when test="searchCondition == 'report_no'">
					AND REPORT_NO LIKE #{sv}
				</when>
				<when test="searchCondition == 'usno'">
					AND REPORT.US_NO LIKE #{sv}
				</when>
				<when test="searchCondition == 'rep_cont'">
					AND REP_CONT LIKE #{sv}
				</when>
				<when test="searchCondition == 'rdate'">
					AND RDATE LIKE #{sv}
				</when>
				<when test="searchCondition == 'rstatus'">
					AND RSTATUS LIKE #{sv}
				</when>
				<when test="searchCondition == 'rexdate'">
					AND REXDATE LIKE #{sv}
				</when>
				<when test="searchCondition == 'bus_code'">
					AND REF_BUS_CODE LIKE #{sv}
				</when>
				<when test="searchCondition == 'usname'">
					AND US_NAME LIKE #{sv}
				</when>
				<otherwise>
					AND (REPORT_NO LIKE #{sv}
						 OR REPORT.US_NO LIKE #{sv}
						 OR REP_CONT LIKE #{sv}
						 OR RDATE LIKE #{sv}
						 OR RSTATUS LIKE #{sv}
						 OR REXDATE LIKE #{sv}
						 OR US_NAME LIKE #{sv}
						 OR REF_BUS_CODE LIKE #{sv})
				</otherwise>	
			</choose>
		</where>
			  ORDER BY REPORT_NO
	</select>
	
	
	<select id="searchAllianceList" parameterType="aSearch" resultMap="AllianceResultSet">
	<bind name="sv" value="'%' + _parameter.getSearchValue() + '%'"/> 
		SELECT
		         ALLIANCE.AL_NO
		       , US_NAME
		       , BUS_CATEGORY
		       , ALLIANCE.BUS_CODE
		       , PBALANCE
		       , TO_CHAR(AL_SUBDATE, 'YYYY-MM-DD') AS ALTODATE
		       , ALSTATUS
		  FROM
		       "USER", BUSINESS, ALLIANCE, "POINT"
		<where>
			ALLIANCE.US_NO = "USER".US_NO
		AND BUSINESS.BUS_CODE = ALLIANCE.BUS_CODE
		AND "POINT".US_NO(+) = ALLIANCE.US_NO
			<choose>
				<when test="searchCondition == 'alno'">
					AND ALLIANCE.AL_NO LIKE #{sv}
				</when>
				<when test="searchCondition == 'usname'">
					AND US_NAME LIKE #{sv}
				</when>
				<when test="searchCondition == 'bus_category'">
					AND BUS_CATEGORY LIKE #{sv}
				</when>
				<when test="searchCondition == 'bus_code'">
					AND ALLIANCE.BUS_CODE LIKE #{sv}
				</when>
				<when test="searchCondition == 'pbalance'">
					AND PBALANCE LIKE #{sv}
				</when>
				<when test="searchCondition == 'alsubdate'">
					AND AL_SUBDATE LIKE #{sv}
				</when>
				<when test="searchCondition == 'alstatus'">
					AND ALSTATUS LIKE #{sv}
				</when>
				<otherwise>
					AND (ALLIANCE.AL_NO LIKE #{sv}
						 OR US_NAME LIKE #{sv}
						 OR BUS_CATEGORY LIKE #{sv}
						 OR ALLIANCE.BUS_CODE LIKE #{sv}
						 OR PBALANCE LIKE #{sv}
						 OR AL_SUBDATE LIKE #{sv}
						 OR ALSTATUS LIKE #{sv})
				</otherwise>	
			</choose>
		</where>
			  ORDER BY AL_NO
	</select>
	
	<select id="admitbannerAdListSelect" resultMap="AllianceResultSet">
		<!--  
		SELECT
                 ALLIANCE.AL_NO,
                 "USER".US_NAME,
                 "POINT".PBALANCE,
                 BUSINESS.BUS_CATEGORY,
                 BUSINESS.BUS_CODE,
                 AL_INTRO,
                 AL_SUBDATE,
                 ALSTATUS,
                 START_DATE,
                 A_IMG_PATH,
                 A_IMG_NAME,
                 A_IMG_CNAME,
                 A_MASSAGE,
                 ALLIANCE.US_NO
		FROM    
                 ALLIANCE,  "USER", BUSINESS, "POINT"
        WHERE 	 
        		 ALLIANCE.US_NO = "USER".US_NO
        AND      BUSINESS.BUS_CODE = ALLIANCE.BUS_CODE
        AND      "POINT".US_NO(+) = ALLIANCE.US_NO
		AND      ALSTATUS = 'Y'
		-->
		
		SELECT
                 ALLIANCE.AL_NO,
                 "USER".US_NAME,
                 "POINT".PBALANCE,
                 BUSINESS.BUS_CATEGORY,
                 BUSINESS.BUS_CODE,
                 AL_INTRO,
                 AL_SUBDATE,
                 ALSTATUS,
                 START_DATE,
                 A_IMG_PATH,
                 A_IMG_NAME,
                 A_IMG_CNAME,
                 A_MASSAGE,
                 ALLIANCE.US_NO
		FROM    
                 ALLIANCE,  "USER", BUSINESS, "POINT" 
        WHERE 	 
        		 ALLIANCE.US_NO = "USER".US_NO
        AND      BUSINESS.BUS_CODE = ALLIANCE.BUS_CODE
        AND      "POINT".US_NO(+) = ALLIANCE.US_NO
		AND      ALSTATUS = 'Y'
        AND      "POINT".PBALANCE <![CDATA[<>]]> 0
        
        <!--
        SELECT * 
			FROM (SELECT
                        ALLIANCE.AL_NO,
                        "USER".US_NAME,
                        "POINT".PBALANCE,
                        BUSINESS.BUS_CATEGORY,
                        BUSINESS.BUS_CODE,
                        AL_INTRO,
                        AL_SUBDATE,
                        ALSTATUS,
                        START_DATE,
                        A_IMG_PATH,
                        A_IMG_NAME,
                        A_IMG_CNAME,
                        A_MASSAGE,
                        ALLIANCE.US_NO
           FROM    
                        ALLIANCE,  "USER", BUSINESS, "POINT"  
           WHERE 	 
                           ALLIANCE.US_NO = "USER".US_NO
           AND      BUSINESS.BUS_CODE = ALLIANCE.BUS_CODE
           AND      "POINT".US_NO = ALLIANCE.US_NO
           AND      ALSTATUS = 'Y'
           AND      "POINT".PBALANCE <![CDATA[<>]]> 0
           AND      "POINT".US_NO = #{usno}
           ORDER BY PBALANCE)
	 WHERE ROWNUM <![CDATA[<=]]> 1
	 -->
	 
	</select>
	
	<select id="countAd2" resultType="_int">	
		SELECT 
			  COUNT(*)	
		  FROM
		      INCOME
		 WHERE
		      ITEM = '프리미엄'
	</select>	
	
	<select id="adminPremiumAdSelect" resultMap="IncomeResultSet">
		 SELECT
				PAY_NO,
				ITEM,
				AMOUNT,
				PDATE,
				EXDATE,
				INCOME.US_NO,
				US_NAME,
				BUSINESS.BUS_CATEGORY,
				BUSINESS.BUS_CODE
		   FROM
				INCOME, "USER", BUSINESS
		  WHERE 
		  		INCOME.US_NO ="USER".US_NO
		  	AND INCOME.US_NO = BUSINESS.US_NO
			AND ITEM = '프리미엄'
	   ORDER BY PAY_NO 
	</select>
	
	
	<select id="searchPreAdList" parameterType="aSearch" resultMap="IncomeResultSet">
	<bind name="sv" value="'%' + _parameter.getSearchValue() + '%'"/> 
		SELECT
				  PAY_NO
				, TO_CHAR(PDATE, 'YYYY-MM-DD') AS PTODATE
				, TO_CHAR(EXDATE, 'YYYY-MM-DD') AS PEXTODATE
				, INCOME.US_NO
				, US_NAME
				, BUSINESS.BUS_CATEGORY
				, BUSINESS.BUS_CODE
		  FROM
			    INCOME, "USER", BUSINESS
	   <where>  
	   			INCOME.US_NO ="USER".US_NO
		   AND  INCOME.US_NO = BUSINESS.US_NO
			<choose>
				<when test="searchCondition == 'payno'">
					AND PAY_NO LIKE #{sv}
				</when>
				<when test="searchCondition == 'pdate'">
					AND PDATE LIKE #{sv}
				</when>
				<when test="searchCondition == 'exdate'">
					AND EXDATE LIKE #{sv}
				</when>
				<when test="searchCondition == 'usno'">
					AND INCOME.US_NO LIKE #{sv}
				</when>
				<when test="searchCondition == 'usname'">
					AND US_NAME LIKE #{sv}
				</when>
				<when test="searchCondition == 'bus_category'">
					AND BUSINESS.BUS_CATEGORY LIKE #{sv}
				</when>
				<when test="searchCondition == 'bus_code'">
					AND BUSINESS.BUS_CODE LIKE #{sv}
				</when>
			    <otherwise>
					AND (PAY_NO LIKE #{sv}
						 OR PDATE LIKE #{sv}
						 OR EXDATE LIKE #{sv}
						 OR INCOME.US_NO LIKE #{sv}
						 OR US_NAME LIKE #{sv}
						 OR BUSINESS.BUS_CATEGORY LIKE #{sv}
						 OR BUSINESS.BUS_CODE LIKE #{sv})
				</otherwise>	
			</choose>
		</where>
			  ORDER BY PAY_NO
	</select>
	
	<select id="getPointList" resultMap="pointResultSet">
		SELECT 
				*
		FROM
			     POINT
	</select>
	
	<select id="selectGetProfit" resultType="_int">
		SELECT 
				<!-- 
				EXTRACT(MONTH  FROM PDATE),
				EXTRACT(YEAR  FROM PDATE),
				 -->
				SUM(AMOUNT)
		FROM 
		        INCOME
		GROUP BY 
		        EXTRACT(MONTH  FROM PDATE),
		        EXTRACT(YEAR  FROM PDATE)
		ORDER BY 
		        EXTRACT(YEAR  FROM PDATE)
	</select>



</mapper>