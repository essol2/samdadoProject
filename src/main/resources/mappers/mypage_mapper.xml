<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper 
PUBLIC "-//mybatis.org//DTD Mapepr 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="mypageMapper">
	<resultMap type="User" id="userResultSet">
	<id property="usno" column="US_NO" />
	<result property="usid" column="US_ID" />
	<result property="uspwd" column="US_PWD" />
	<result property="usname" column="US_NAME" />
	<result property="usbirth" column="US_BIRTH" />
	<result property="usemail" column="US_EMAIL" />
	<result property="usphone" column="US_PHONE" />
	<result property="busno" column="BUS_NO" />
	<result property="uspart" column="US_PART" />
	<result property="usstatus" column="US_STATUS" />
	<result property="usstop" column="US_STOP" />
	<result property="authKey" column="AUTH_KEY" />
	</resultMap>
	
	<resultMap type="Point" id="pointResultSet">
	<id property="pno" column="PNO" />
	<result property="pdate" column="PDATE" />
	<result property="pdetail" column="PDETAIL" />
	<result property="pbalance" column="PBALANCE" />
	<result property="pamount" column="PAMOUNT" />
	<result property="usno" column="US_NO" />
	</resultMap>
	
	<resultMap type="AccountBook" id="accountResultSet">
	<id property="accno" column="ACC_NO"/>
	<result property="usno" column="US_NO"/>
	<result property="accTripDate" column="ACC_TRIPD"/>
	<result property="accName" column="ACC_NAME"/>
	<result property="accClassify" column="ACC_CLASSIFY"/>
	<result property="accWon" column="ACC_WON"/>
	<result property="accWrited" column="ACC_WRITED"/>
	<result property="accDutch" column="ACC_DUTCH"/>
	<result property="accOneWon" column="ACC_ONEWON"/>
	<result property="accAccompany" column="ACC_ACCOMPANY"/>
	<result property="accFinWon" column="ACC_FINWON"/>
	<result property="accPstatus" column="ACC_PSTATUS"/>
	<result property="whopay" column="WHOPAY"/>
	<result property="payMethod" column="PAYMETHOD"/>
	</resultMap>
	
	<resultMap type="AccountBook" id="countResultSet">
	<id property="accno" column="ACC_NO"/>
	<result property="usno" column="US_NO"/>
	<result property="accTripDate" column="ACC_TRIPD"/>
	<result property="accName" column="ACC_NAME"/>
	<result property="accClassify" column="ACC_CLASSIFY"/>
	<result property="accWon" column="ACC_WON"/>
	<result property="accWrited" column="ACC_WRITED"/>
	<result property="accDutch" column="ACC_DUTCH"/>
	<result property="accOneWon" column="ACC_ONEWON"/>
	<result property="accAccompany" column="ACC_ACCOMPANY"/>
	<result property="accFinWon" column="ACC_FINWON"/>
	<result property="accPstatus" column="ACC_PSTATUS"/>
	<result property="whopay" column="WHOPAY"/>
	<result property="payMethod" column="PAYMETHOD"/>
	</resultMap>
	
	<!-- 0. 회원 pwd 변경 메소드 : userService로 넘김 -->
	<!-- 1. 이메일, 전화번호 변경 메소드 -->
	<update id="updateUserInfo" parameterType="User">
		UPDATE
				"USER"
		   SET
		   		US_EMAIL = #{usemail},
		   		US_PHONE = #{usphone}
		 WHERE
				US_ID = #{usid}
		   AND  US_STOP IS NULL
	</update>
	
	<!-- 2. 제휴회원 - 포인트 -->
	<!-- 제휴회원 - 포인트 충전 내역 insert 메소드 -->
	<insert id="insertNewPayment" parameterType="Income">
		INSERT
		INTO Income
		(
			PAY_NO
		  , ITEM
		  , AMOUNT
		  , PDATE
		  , EXDATE
		  , US_NO
		)
		VALUES
		(
			INC_SEQ_NO.NEXTVAL
		  , #{item}
		  , #{amount}
		  , SYSDATE
		  , NULL
		  , #{usno}
		)
	</insert>
	
	<!-- 제휴회원 - 포인트 DB에 포인트 넣어주는 메소드 -->
	<insert id="insertNewPoint" parameterType="Point">
		INSERT
		INTO POINT
		(
			PNO
		  , PDATE
		  , PDETAIL
		  , PBALANCE
		  , PAMOUNT
		  , US_NO
		)
		VALUES
		(
			PON_SEQ_NO.NEXTVAL
		  , SYSDATE
		  , '포인트 충전'
		  , #{pbalance}
		  , #{pamount}
		  , #{usno}
		)
	</insert>
	
	<!-- 제휴회원 - 기존 회원의 포인트 정보 가져오는 메소드 -->
	<select id="prePoint" parameterType="Point" resultMap="pointResultSet">
		SELECT *
		FROM (
		        SELECT *
		        FROM POINT
		        WHERE US_NO = 21
		        ORDER BY PDATE DESC
      		 )
		WHERE 
				ROWNUM = 1
	</select>
	
	<!-- 제휴회원 - 포인트 리스트 출력 메소드 -->
	<select id="selectPointList" parameterType="Point" resultMap="pointResultSet">
		SELECT 
				PNO
			  , PDATE
			  , PDETAIL
			  , PBALANCE
			  , PAMOUNT
			  , US_NO
		FROM
				POINT
		WHERE
				US_NO = #{usno}
		ORDER BY
	           PNO DESC
				
	</select>
	
	<!-- 제휴회원 - point 테이블에 검색결과 조회하러 가기 -->
	<select id="selectSearchList" resultMap="pointResultSet">
		SELECT *
		FROM POINT
		WHERE US_NO = #{usno}
		<choose>
			<when test="selector == '1개월'">
				AND PDATE BETWEEN TO_DATE(#{startdate}, 'YY-MM-DD')
			          AND TO_DATE(ADD_MONTHS(TO_DATE(#{startdate}, 'YY-MM-DD'),1), 'YY-MM-DD')
			</when>
			<when test="selector == '3개월'">
				AND PDATE BETWEEN TO_DATE(#{startdate}, 'YY-MM-DD')
			          AND TO_DATE(ADD_MONTHS(TO_DATE(#{startdate}, 'YY-MM-DD'),3), 'YY-MM-DD')
			</when>
			<otherwise>
				AND PDATE BETWEEN TO_DATE(#{startdate}, 'YY-MM-DD')
			          AND TO_DATE(ADD_MONTHS(TO_DATE(#{startdate}, 'YY-MM-DD'),6), 'YY-MM-DD')
			</otherwise>      
		</choose>
		ORDER BY PNO DESC
	</select>
	
	
	<!-- 3. 제휴회원 - 문의하기 DB insert -->
	<insert id="insertNewQnA" parameterType="QnA">
		INSERT
		INTO "QnA"
		(
			QNA_NO
		  , QCONT
		  , QDATE
		  , QREPLY
		  , QSTATUS
		  , US_NO
		)
		VALUES
		(
			QNA_SEQ_NO.NEXTVAL
		  , #{qcont}
		  , SYSDATE
		  , #{qreply}
		  , DEFAULT
		  , #{usno}
		)
	</insert>
	
	<!-- 4. 일반회원 - 가계부 -->
	<!-- 일반회원 - 가계부 입력 메소드 -->
	<insert id="insertNewAcc" parameterType="AccountBook">
		INSERT
		INTO ACCOUNT
		(
			ACC_NO
		  , ACC_TRIPD
		  , ACC_NAME
		  , ACC_CLASSIFY
		  , ACC_WON
		  , ACC_WRITED
		  , ACC_DUTCH
		  , ACC_PSTATUS
		  , ACC_ACCOMPANY
		  , ACC_ONEWON
		  , WHOPAY
		  , US_NO
		)
		VALUES
		(
			ACC_SEQ_NO.NEXTVAL
		  , #{accTripDate}
		  , #{accName}
		  , #{accClassify}
		  , #{accWon}
		  , SYSDATE
		  , #{accDutch}
		  , #{accPstatus}
		  , #{accAccompany}
		  , #{accOneWon}
		  , #{whopay}
		  , #{usno}
		)
	</insert>
	
	<!-- 일반회원 - 가계부 첫페이지 조회-->
	<select id="selectAccountList" parameterType="AccountBook" resultMap="accountResultSet">
		SELECT 	*
		FROM 	
				ACCOUNT
		WHERE 	
				US_NO = #{usno}
		AND 
				ACC_TRIPD = #{searchDate}
		ORDER BY
	           	ACC_NO DESC
	</select>
	
	<!-- 일반회원 - 가계부 가장 최근 날짜 가져오기 -->
<!-- 	<select id="selectRecentDate" resultMap="accountResultSet" parameterType="AccountBook">
		SELECT ACC_TRIPD, US_NO
		FROM (  SELECT *
		        FROM ACCOUNT
		        WHERE US_NO=#{usno}
		        ORDER BY ACC_TRIPD DESC )
		WHERE ROWNUM = 1
	</select> -->
	
	<select id="selectRecentDate" resultMap="accountResultSet" parameterType="AccountBook">
		SELECT ACC_TRIPD, SUM(ACC_WON) AS totalSum, SUM(ACC_ONEWON) AS oneTotalSum
		FROM ACCOUNT
		WHERE US_NO = #{usno}
		GROUP BY ACC_TRIPD
		ORDER BY ACC_TRIPD DESC
	</select>
</mapper>