<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper 
PUBLIC "-//mybatis.org//DTD Mapepr 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="businessMapper">
	<resultMap type="Business" id="BusinessResultSet">
		<id property="bus_code" column="BUS_CODE" />
		<result property="us_no" column="US_NO" />
		<result property="bus_name" column="BUS_NAME" />
		<result property="bus_address" column="BUS_ADDRESS" />
		<result property="bus_intro" column="BUS_INTRO" />
		<result property="bus_date" column="BUS_DATE" />
		<result property="bus_modify" column="BUS_MODIFY" />
		<result property="ad_count" column="AD_COUNT" />
		<result property="bus_classify" column="BUS_CLASSIFY" />
		<result property="bus_category" column="BUS_CATEGORY" />
		<result property="bus_status" column="BUS_STATUS" />
		<result property="bus_phone" column="BUS_PHONE" />
		<result property="res_category" column="RES_CATEGORY"/>
		<result property="hotel_category" column="HOTEL_CATEGORY" />
		<result property="tour_category" column="TOUR_CATEGORY" />
		<result property="tour_tema" column="TOUR_TEMA" />
		<result property="al_no" column="AL_NO" />
		<result property="bus_opening" column="BUS_OPENING" />
		<result property="file_rename" column="FILE_RENAME" />	<!-- 비즈니스ATT 대한 JOIN -->
		<result property="file_lv" column="FILE_LV" />
		<!-- USER 테이블 조인을 위한 필드 -->
		<result property="usname" column="US_NAME" />
		<!-- 관광지프로덕트 조인 -->	
		<result property="pro_name" column="PRO_NAME" />
		<result property="pro_price" column="PRO_PRICE" />
		<result property="pro_adult" column="PRO_ADULT" />
		<result property="pro_youth" column="PRO_YOUTH" />
		<result property="pro_child" column="PRO_CHILD" />
		<!-- 차조인 -->
		<result property="car_name" column="CAR_NAME" />
		<result property="car_type" column="CAR_TYPE" />
		<result property="car_producer" column="CAR_PRODUCER" />
		<result property="car_fuel" column="CAR_FUEL" />
		<result property="car_price" column="CAR_PRICE" />
		<!-- 방 조인 -->
		<result property="room_name" column="ROOM_NAME" />
		<result property="room_price" column="ROOM_PRICE" />
		<result property="room_people" column="ROOM_PEOPLE" />
		<result property="room_amenity" column="ROOM_AMENITY" />
	</resultMap>
	
	<resultMap type="BusinessAtt" id="BusinessAttResultSet">
		<id property="file_no" column="FILE_NO" />
		<result property="file_name" column="FILE_NAME" />
		<result property="file_root" column="FILE_ROOT" />
		<result property="file_status" column="FILE_STATUS" />
		<result property="file_rename" column="FILE_RENAME" />
		<result property="file_lv" column="FILE_LV" />
		<result property="bus_code" column="BUS_CODE" />
	</resultMap>
	
	<resultMap type="Car" id="CarResultSet">
		<id property="car_no" column="CAR_NO" />
		<result property="bus_code" column="BUS_CODE" />
		<result property="car_name" column="CAR_NAME" />
		<result property="car_type" column="CAR_TYPE" />
		<result property="car_producer" column="CAR_PORDUCER" />
		<result property="car_fuel" column="CAR_FUEL" />
		<result property="car_price" column="CAR_PRICE" />
		<result property="car_date" column="CAR_DATE" />
		<result property="car_modify" column="CAR_MODIFY" />
	</resultMap>
	
	<resultMap type="CarAtt" id="CarAttResultSet">
		<id property="file_no" column="FILE_NO" />
		<result property="file_name" column="FILE_NAME" />
		<result property="file_root" column="FILE_ROOT" />
		<result property="file_status" column="FILE_STATUS" />
		<result property="file_rename" column="FILE_RENAME" />
		<result property="file_lv" column="FILE_LV" />
		<result property="car_no" column="CAR_NO" />
	</resultMap>
	
	<resultMap type="Report" id="ReportResultSet">
		<id property="report_no" column="REPORT_NO" />
		<result property="rep_res" column="REP_RES" />
		<result property="rep_cont" column="REP_CONT" />
		<result property="rdate" column="RDATE" />
		<result property="rstatus" column="RSTATUS" />
		<result property="rexdate" column="REXDATE" />
		<result property="r_img_path" column="R_IMG_PATH" />
		<result property="r_img_name" column="R_IMG_NAME" />
		<result property="r_img_cname" column="R_IMG_CNAME" />
		<result property="usno" column="US_NO" />			      <!-- USER 테이블 조인 -->
		<result property="r_count" column="R_COUNT" />
		<result property="bus_code" column="REF_BUS_CODE" />  <!-- BUSINESS 테이블 조인 -->
	</resultMap>
	
	<resultMap type="Alliance" id="AllianceResultSet">
		<id property="alno" column="AL_NO" />
		<result property="alintro" column="AL_INTRO" />
		<result property="alsubdate" column="AL_SUBDATE" />
		<result property="startdate" column="START_DATE" />
		<result property="aimgpath" column="A_IMG_PATH" />
		<result property="aimgname" column="A_IMG_NAME" />
		<result property="aimgcname" column="A_IMG_CNAME" />
		<result property="amassage" column="A_MASSAGE" />
		<result property="usno" column="US_NO" />
		<result property="bus_code" column="BUS_CODE" />
		<!-- USER 테이블 조인을 위한 필드 -->
		<result property="usname" column="US_NAME" />	
		<!-- INCOME 테이블 조인을 위한 필드 -->
		<result property="amount" column="amount" />	
		<!-- BUSINESS 테이블 조인을 위한 필드 -->
		<result property="bus_category" column="BUS_CATEGORY" />	
		<!-- POINT 테이블 조인을 위한 필드 -->
		<result property="pbalance" column="PBALANCE" />
	</resultMap>
	
	<resultMap type="Point" id="pointResultSet">
		<id property="pno" column="PNO" />
		<result property="pdate" column="PDATE" />
		<result property="pdetail" column="PDETAIL" />
		<result property="pbalance" column="PBALANCE" />
		<result property="pamount" column="PAMOUNT" />
		<result property="usno" column="US_NO" />
	</resultMap>
	
	<insert id="insertBusiness" parameterType="Business">
		INSERT
		  INTO BUSINESS
		  (
		  	BUS_CODE
		  , US_NO
		  , BUS_NAME
		  , BUS_ADDRESS
		  , BUS_INTRO
		  , BUS_DATE
		  , BUS_MODIFY
		  , AD_COUNT
		  , BUS_CLASSIFY
		  , BUS_CATEGORY
		  , BUS_STATUS
		  , BUS_PHONE
		  , RES_CATEGORY
		  , BUS_OPENING
		  )
		  VALUES
		  (
		  	BUS_SEQ_NO.NEXTVAL
		  , #{us_no}
		  , #{bus_name}
		  , #{bus_address}
		  , #{bus_intro}
		  , SYSDATE
		  , SYSDATE
		  , DEFAULT
		  , #{bus_classify}
		  , #{bus_category}
		  , DEFAULT
		  , #{bus_phone}
		  , #{res_category}
		  , #{bus_opening}
		  
		  )
	</insert>
	<insert id="insertBusAtt" parameterType="java.util.List">
		<foreach collection="list" item="item" open="INSERT ALL" separator=" " close="SELECT * FROM DUAL">
		  INTO BUSINESS_ATT
		  (
		  	FILE_NO
		  ,	FILE_NAME
		  ,	FILE_ROOT
		  ,	FILE_STATUS
		  ,	FILE_RENAME
		  ,	FILE_LV
		  ,	BUS_CODE
		  )
		  VALUES
		  (
		  	BUSATT_SEQ_NO.NEXTVAL
		  , #{item.file_name}
		  , #{item.file_root}
		  , DEFAULT
		  , #{item.file_rename}
		  , DEFAULT
		  , BUS_SEQ_NO.CURRVAL
		  )
		</foreach>
	</insert>
	<insert id="insertMain" parameterType="BusinessAtt">
		  INSERT
		  INTO BUSINESS_ATT
		  (
		  	FILE_NO
		  ,	FILE_NAME
		  ,	FILE_ROOT
		  ,	FILE_STATUS
		  ,	FILE_RENAME
		  ,	FILE_LV
		  ,	BUS_CODE
		  )
		  VALUES
		  (
		  	BUSATT_SEQ_NO.NEXTVAL
		  , #{file_name}
		  , #{file_root}
		  , DEFAULT
		  , #{file_rename}
		  , '0'
		  , BUS_SEQ_NO.CURRVAL
		  )
	</insert>
	<insert id="insertCar" parameterType="java.util.List">
		<foreach collection="list" item="item" open="INSERT ALL" separator=" " close="SELECT * FROM DUAL">
		  INTO CAR
		  (
		  	CAR_NO
		  , BUS_CODE
		  , CAR_NAME
		  , CAR_TYPE
		  , CAR_PRODUCER
		  , CAR_FUEL
		  , CAR_PRICE
		  , CAR_DATE
		  , CAR_MODIFY
		  )
		  VALUES
		  (
		  	get_car_seq
		  , BUS_SEQ_NO.CURRVAL
		  , #{item.car_name}
		  , #{item.car_type}
		  , #{item.car_producer}
		  , #{item.car_fuel}
		  , #{item.car_price}
		  , SYSDATE
		  , SYSDATE
		  )
		</foreach>
	</insert>
	<insert id="insertCarAtt" parameterType="CarAtt">
		<foreach collection="list" item="item" open="INSERT ALL" separator=" " close="SELECT * FROM DUAL">
		  INTO CAR_ATT
		  (
		  	FILE_NO
		  ,	FILE_NAME
		  ,	FILE_ROOT
		  ,	FILE_STATUS
		  ,	FILE_RENAME
		  ,	FILE_LV
		  ,	CAR_NO
		  )
		  VALUES
		  (
		  	get_busatt_seq
		  , #{item.file_name}
		  , #{item.file_root}
		  , DEFAULT
		  , #{item.file_rename}
		  , DEFAULT
		  , CAR_SEQ_NO.CURRVAL
		  )
		</foreach>
	</insert>
  
	<insert id="insertRoom" parameterType="java.util.List">
		<foreach collection="list" item="item" open="INSERT ALL" separator=" " close="SELECT * FROM DUAL">
		  INTO ROOM
		  (
		  	ROOM_NO
		  , BUS_CODE
		  , ROOM_NAME
		  , ROOM_PRICE
		  , ROOM_DATE
		  , ROOM_MODIFY
		  , ROOM_PEOPLE
		  , ROOM_AMENITY
		  , ROOM_STATE
		  )
		  VALUES
		  (
		  	get_room_seq
		  , BUS_SEQ_NO.CURRVAL
		  , #{item.room_name}
		  , #{item.room_price}
		  , SYSDATE
		  , SYSDATE
		  , #{item.room_people}
		  , #{item.room_amenity}
		  , DEFAULT
		  )
		</foreach>
	</insert>
	
	<insert id="insertRoomAtt" parameterType="RoomAtt">
		<foreach collection="list" item="item" open="INSERT ALL" separator=" " close="SELECT * FROM DUAL">
		  INTO ROOM_ATT
		  (
		  	FILE_NO
		  ,	FILE_NAME
		  ,	FILE_ROOT
		  ,	FILE_STATUS
		  ,	FILE_RENAME
		  ,	FILE_LV
		  ,	ROOM_NO
		  )
		  VALUES
		  (
		  	get_busatt_seq
		  , #{item.file_name}
		  , #{item.file_root}
		  , DEFAULT
		  , #{item.file_rename}
		  , DEFAULT
		  , ROOM_SEQ_NO.CURRVAL
		  )
		</foreach>
	</insert>
	
	<insert id="insertTour" parameterType="TourProduct">
		INSERT
		  INTO TOUR_PRODUCT
		  (
		  	PRO_NO
		  , BUS_CODE
		  , PRO_NAME
		  , PRO_ADULT
		  , PRO_YOUTH
		  , PRO_CHILD
		  , PRO_FAC
		  )
		  VALUES
		  (
		  	TOUR_SEQ_NO.NEXTVAL
		  , BUS_SEQ_NO.CURRVAL
		  , #{pro_name}
		  , #{pro_adult}
		  , #{pro_youth}
		  , #{pro_child}
		  , #{pro_fac}
		  )
	</insert>
	
	<select id="selectResListCount" resultType="_int">
		SELECT
			   COUNT(*)
		  FROM
		       BUSINESS
		 WHERE
			   BUS_STATUS = 'Y'
		   AND BUS_CATEGORY = 'R'
		   AND BUS_CLASSIFY = 'G'
	</select>
	<!-- 음식점 디테일 -->
	<select id="selectRestaurant" resultMap="BusinessResultSet">
		SELECT 
		       BUS_CODE
		     , US_NO
		     , BUS_NAME
		     , BUS_ADDRESS
		     , BUS_INTRO
		     , BUS_DATE
		     , BUS_MODIFY
		     , AD_COUNT
		     , BUS_CLASSIFY
		     , BUS_CATEGORY
		     , BUS_STATUS
		     , BUS_PHONE
		     , RES_CATEGORY
		     , BUS_OPENING
		  FROM
		       BUSINESS
		 WHERE
			   BUS_CODE = #{bus_code}
		   AND BUS_STATUS = 'Y'
	</select>
	
	<!-- 관광지디테일 -->
	<select id="selectTour" resultMap="BusinessResultSet">
		SELECT 
		       B.BUS_CODE
		     , US_NO
		     , BUS_NAME
		     , BUS_ADDRESS
		     , BUS_INTRO
		     , BUS_DATE
		     , BUS_MODIFY
		     , AD_COUNT
		     , BUS_CLASSIFY
		     , BUS_CATEGORY
		     , BUS_STATUS
		     , BUS_PHONE
		     , RES_CATEGORY
		     , BUS_OPENING
		     , TP.PRO_NAME
		     , TP.PRO_ADULT
		     , TP.PRO_YOUTH
		     , TP.PRO_CHILD
		  FROM
		       BUSINESS B, TOUR_PRODUCT TP
		 WHERE
		       B.BUS_CODE = TP.BUS_CODE   	   
		   AND B.BUS_CODE = #{bus_code}
		   AND BUS_STATUS = 'Y'
	</select>
	<select id="selectAtt" resultMap="BusinessAttResultSet">
		SELECT
		  	   FILE_NO
			 , FILE_NAME
             , FILE_STATUS
             , FILE_RENAME
             , FILE_LV 
             , BUS_CODE
		  FROM 
		  	   BUSINESS_ATT
		 WHERE
			   BUS_CODE = #{bus_code}
      ORDER BY
               FILE_LV		       
	</select>
	<!-- 렌트카디테일 -->
	<select id="selectCar" resultMap="BusinessResultSet">
		SELECT 
		       B.BUS_CODE
		     , US_NO
		     , BUS_NAME
		     , BUS_ADDRESS
		     , BUS_INTRO
		     , BUS_DATE
		     , BUS_MODIFY
		     , AD_COUNT
		     , BUS_CLASSIFY
		     , BUS_CATEGORY
		     , BUS_STATUS
		     , BUS_PHONE
		     , BUS_OPENING
		     , BT.FILE_RENAME
		     , C.CAR_NAME
             , C.CAR_TYPE
             , C.CAR_PRODUCER
             , C.CAR_FUEL
             , C.CAR_PRICE
             , CA.FILE_RENAME
		  FROM
		       BUSINESS B, BUSINESS_ATT BT, CAR C, CAR_ATT CA
		 WHERE
		       B.BUS_CODE = BT.BUS_CODE 
           AND B.BUS_CODE = C.BUS_CODE
           AND C.CAR_NO = CA.CAR_NO
           AND B.BUS_CODE = #{bus_code}
		   AND BUS_CATEGORY = 'C'
		   AND BUS_STATUS = 'Y'
	  ORDER BY C.CAR_NO DESC
	</select>
	<!-- 호텔 디테일 -->
	<select id="selectHotel" resultMap="BusinessResultSet">
		SELECT 
		       B.BUS_CODE
		     , US_NO
		     , BUS_NAME
		     , BUS_ADDRESS
		     , BUS_INTRO
		     , BUS_DATE
		     , BUS_MODIFY
		     , AD_COUNT
		     , BUS_CLASSIFY
		     , BUS_CATEGORY
		     , BUS_STATUS
		     , BUS_PHONE
		     , BUS_OPENING
		     , BT.FILE_RENAME
		     , ROOM_NAME
             , ROOM_PRICE
             , ROOM_PEOPLE
             , ROOM_AMENITY
             , RT.FILE_RENAME
		  FROM
		       BUSINESS B, BUSINESS_ATT BT, ROOM R, ROOM_ATT RT
		 WHERE
		       B.BUS_CODE = BT.BUS_CODE 
           AND B.BUS_CODE = R.BUS_CODE
           AND R.ROOM_NO = RT.ROOM_NO
           AND B.BUS_CODE = #{bus_code}
		   AND BUS_CATEGORY = 'H'
		   AND BUS_STATUS = 'Y'
	  ORDER BY R.ROOM_NO DESC		
	</select>
	<!-- 관광지리스트 -->
	<select id="selectTourList" resultMap="BusinessResultSet">
		SELECT 
		       B.BUS_CODE
		     , US_NO
		     , BUS_NAME
		     , BUS_ADDRESS
		     , BUS_INTRO
		     , BUS_DATE
		     , BUS_MODIFY
		     , AD_COUNT
		     , BUS_CLASSIFY
		     , BUS_CATEGORY
		     , BUS_STATUS
		     , BUS_PHONE
		     , RES_CATEGORY
		     , BUS_OPENING
		     , BT.FILE_RENAME
		     , BT.FILE_LV
		     , PRO_ADULT
		     , PRO_YOUTH
		     , PRO_CHILD
		  FROM
		       BUSINESS B, BUSINESS_ATT BT, TOUR_PRODUCT TP
		 WHERE
		       B.BUS_CODE = BT.BUS_CODE AND B.BUS_CODE = TP.BUS_CODE   	   
		   AND BUS_CATEGORY = 'T'
		   AND BUS_STATUS = 'Y'
	  ORDER BY DBMS_RANDOM.RANDOM
	</select>
	<!-- 호텔리스트 -->
	<select id="selectHotelList" resultMap="BusinessResultSet">
		SELECT 
       		   B.BUS_CODE
       		 , US_NO
             , BUS_NAME
     		 , BUS_ADDRESS
     		 , BUS_INTRO
     		 , BUS_CATEGORY
     		 , BUS_PHONE
     		 , BUS_OPENING
     		 , HOTEL_CATEGORY
     		 , BT.FILE_RENAME
     		 , BT.FILE_LV
  		  FROM 
  		       BUSINESS B
  		  JOIN 
  		       BUSINESS_ATT BT ON B.BUS_CODE = BT.BUS_CODE
 		 WHERE   
       		   BUS_STATUS = 'Y'
       	   AND BUS_CATEGORY = 'H'
	  ORDER BY DBMS_RANDOM.RANDOM
	</select>
	<!-- 음식점리스트 -->
	<select id="selectResList" resultMap="BusinessResultSet">
		SELECT 
       		   B.BUS_CODE
       		 , US_NO
             , BUS_NAME
     		 , BUS_ADDRESS
     		 , BUS_INTRO
     		 , BUS_CATEGORY
     		 , BUS_PHONE
     		 , BUS_OPENING
     		 , RES_CATEGORY
     		 , BT.FILE_RENAME
     		 , BT.FILE_LV
  		  FROM 
  		       BUSINESS B
  		  JOIN 
  		       BUSINESS_ATT BT ON B.BUS_CODE = BT.BUS_CODE
 		 WHERE   
       		   BUS_STATUS = 'Y'
       	   AND BUS_CATEGORY = 'R'
       	   AND BUS_CLASSIFY = 'G'
	  ORDER BY DBMS_RANDOM.RANDOM
	</select>
	
	<!-- 렌트카리스트 -->
	<select id="selectCarList" resultMap="BusinessResultSet">
		SELECT
			   B.BUS_CODE
			 , US_NO
			 , BUS_NAME
			 , BUS_ADDRESS
			 , BUS_INTRO
			 , BUS_DATE
			 , BUS_MODIFY
			 , AD_COUNT
			 , BUS_CLASSIFY
			 , BUS_CATEGORY
			 , BUS_STATUS
			 , BUS_PHONE
			 , BUS_OPENING
			 , BT.FILE_RENAME
			 , BT.FILE_LV
		  FROM 
  		       BUSINESS B
  		  JOIN 
  		       BUSINESS_ATT BT ON B.BUS_CODE = BT.BUS_CODE 
		 WHERE 
		 	   BUS_STATUS = 'Y'
       	   AND BUS_CATEGORY = 'C'
	  ORDER BY DBMS_RANDOM.RANDOM
	</select>
	<!--지혜 -->

	<select id="countReport" resultType="_int">
		SELECT 
   		       COUNT(*)
		  FROM 
		  	   REPORT
		 WHERE 
		 	   RSTATUS = 'N'
	</select>
	
	<select id="selectMyBusinessCategory" parameterType="User" resultType="Business">
		<!--  
		SELECT
				BUS_CODE,
				US_NO,
				BUS_NAME,
				BUS_ADDRESS,
				BUS_INTRO,
				BUS_DATE,
				BUS_MODIFY,
				AD_COUNT,
				BUS_CLASSIFY,
				BUS_CATEGORY,
				BUS_STATUS,
				BUS_PHONE,
				HOTEL_CATEGORY,
				TOUR_CATEGORY,
				TOUR_TEMA,
				AL_NO,
				BUS_OPENING,
				RES_CATEGORY
		FROM    
				SMBCVIEW
		WHERE   BUS_CODE NOT IN (SELECT 
										BUS_CODE
							     FROM   
							     		ALLIANCE
							     WHERE  US_NO = #{usno}
							     AND    ALSTATUS <![CDATA[<>]]> 'Y')
		  AND	US_NO = #{usno}
		 -->
		 
		  SELECT
				BUS_CODE,
				US_NO,
				BUS_NAME,
				BUS_ADDRESS,
				BUS_INTRO,
				BUS_DATE,
				BUS_MODIFY,
				AD_COUNT,
				BUS_CLASSIFY,
				BUS_CATEGORY,
				BUS_STATUS,
				BUS_PHONE,
				HOTEL_CATEGORY,
				TOUR_CATEGORY,
				TOUR_TEMA,
				AL_NO,
				BUS_OPENING,
				RES_CATEGORY
		FROM    
				SMBCVIEW
		WHERE   BUS_CODE NOT IN (SELECT 
										BUS_CODE
							     FROM   
							     		ALLIANCE, POINT
							     WHERE
                                 ALLIANCE.US_NO = POINT.US_NO
                                 AND ALLIANCE.US_NO = #{usno}
                                 AND POINT.PBALANCE <![CDATA[<>]]> 0
                                 AND ALSTATUS <![CDATA[<>]]> 'Y')
		  AND	US_NO = #{usno}
		  
	</select>  
	
	<insert id="insertBannerAd" parameterType="Alliance">
		INSERT
		  INTO ALLIANCE
		  (
		  	AL_NO
		  , AL_INTRO
		  , AL_SUBDATE
		  , ALSTATUS
		  , A_IMG_PATH
		  , A_IMG_NAME
		  , A_IMG_CNAME
		  , US_NO
		  , BUS_CODE
		  )
		  VALUES
		  (
		  	AL_SEQ_NO.NEXTVAL
		  , #{alintro}
		  , SYSDATE
		  , 'N'
		  , #{aimgpath}
		  , #{aimgname}
		  , #{aimgcname}
		  , #{usno}
		  , #{bus_code}
		  )
	</insert>
	
	<insert id="insertReport" parameterType="Report">
      INSERT
        INTO Report
        (
          REPORT_NO
        , REP_RES
        , REP_CONT
        , RDATE
        , RSTATUS
        , REXDATE
        , R_IMG_PATH
        , R_IMG_NAME
        , R_IMG_CNAME
        , US_NO
        , R_COUNT
        , REF_BUS_CODE
        )
        VALUES
        (
           REP_SEQ_NO.NEXTVAL
        , #{rep_res}
        , #{rep_cont}
        , DEFAULT
        , DEFAULT
        , DEFAULT
        , #{r_img_path}
        , #{r_img_name}
        , #{r_img_cname}
        , #{usno}
        , DEFAULT
        , #{bus_code}
        )
   </insert>
   
   <insert id="insertReport2" parameterType="Report">
      INSERT
        INTO Report
        (
          REPORT_NO
        , REP_RES
        , REP_CONT
        , RDATE
        , RSTATUS
        , REXDATE
        , R_IMG_PATH
        , R_IMG_NAME
        , R_IMG_CNAME
        , US_NO
        , R_COUNT
        , REF_BUS_CODE
        )
        VALUES
        (
           REP_SEQ_NO.NEXTVAL
        , #{rep_res}
        , #{rep_cont}
        , DEFAULT
        , DEFAULT
        , DEFAULT
        , #{r_img_path}
        , #{r_img_name}
        , #{r_img_cname}
        , #{usno}
        , (SELECT *
                FROM(SELECT 
                             REPORT.R_COUNT
                       FROM 
                             "REPORT"
                       WHERE 
                             REF_BUS_CODE = #{ bus_code}
                             ORDER BY R_COUNT DESC)
            WHERE ROWNUM = 1
           )
        , #{bus_code}
        )
   </insert>
   
   <update id="updateReport" parameterType="Report">
		UPDATE
				Report
			SET
				REP_CONT = #{rep_cont}
			  , R_COUNT = R_COUNT + 1
			  , RDATE = SYSDATE
			  , RSTATUS = 'N'
			  , R_IMG_PATH = #{r_img_path}
        	  , R_IMG_NAME = #{r_img_name}
              , R_IMG_CNAME = #{r_img_cname}
		  WHERE
		  		REF_BUS_CODE = #{bus_code}
	</update>
	
	<select id ="findUsno">
		SELECT
				    BUS_CODE
				  , US_NO
				  , BUS_NAME
				  , BUS_ADDRESS
				  , BUS_INTRO
				  , BUS_DATE
				  , BUS_MODIFY
				  , AD_COUNT
				  , BUS_CLASSIFY
				  , BUS_CATEGORY
				  , BUS_STATUS
				  , BUS_PHONE
				  , RES_CATEGORY
				  , BUS_OPENING
			  FROM
				   BUSINESS
		     WHERE
		     	   BUS_CODE = #{bus_code}
	</select>
  
   <select id="findReportStatus" parameterType="Report" resultMap="ReportResultSet">
      SELECT 
              REPORT_NO
	        , REP_RES
	        , REP_CONT
	        , RDATE
	        , RSTATUS
	        , REXDATE
	        , R_IMG_PATH
	        , R_IMG_NAME
	        , R_IMG_CNAME
	        , US_NO
	        , R_COUNT
	        , REF_BUS_CODE
        FROM 
             (SELECT *
                FROM "REPORT"
               WHERE 
                     REF_BUS_CODE = #{ bus_code}          
                     ORDER BY REPORT_NO DESC)
       WHERE  ROWNUM = 1
   </select>

	<insert id="insertIncome1" parameterType="Income">
		INSERT
		  INTO INCOME
		  (
		  	PAY_NO
		  , ITEM
		  , AMOUNT
	    , PDATE
		  , EXDATE
		  , US_NO
		  )
		  VALUES
		  (
		  	INC_SEQ_NO.NEXTVAL
		  , '프리미엄'
		  , #{amount}
		  , SYSDATE
		  , SYSDATE + #{primonth}
		  , #{usno}
		  )
	</insert>

   <insert id="insertIncome" parameterType="Income">
		INSERT
		INTO Income
		(
			PAY_NO
		  , ITEM
		  , AMOUNT
		  , PDATE
		  , EXDATE
		  , US_NO
		)
		VALUES
		(
			INC_SEQ_NO.NEXTVAL
		  , '수수료'
		  , #{amount}
		  , SYSDATE
		  , NULL
		  , #{usno}
		)
	</insert>
		
	<insert id="insertPoint" parameterType="Point">
		INSERT
		INTO POINT
		(
			PNO
		  , PDATE
		  , PDETAIL
		  , PBALANCE
		  , PAMOUNT
		  , US_NO
		)
		VALUES
		(
			PON_SEQ_NO.NEXTVAL
		  , SYSDATE
		  , '예약 포인트 적립'
		  , #{pbalance}
		  , #{pamount}
		  , #{usno}
		)
	</insert>
	 
	 <insert id="insertBookingHotel">
		INSERT
		  INTO ROOM_BOOKING
		  (
		  	R_BOOKING_NO
		  , R_PRODUCT_NAME
		  , R_BOOKING_DATE
		  , R_BOOKING_MODIFY
		  , R_BOOKING_ADDRESS
		  , R_BOOKING_PAY
		  , R_BOOKING_NUMBER
		  , R_BOOKING_PHONE
		  , R_TOUR_DATE
		  , US_NO
		  , HOTEL_NO
		  , BUS_CODE
		  , BUS_NAME
		  )
		  VALUES
		  (
		  	BOOKING_NO.NEXTVAL
		  , #{r_booking_product}
		  , SYSDATE
		  , NULL
		  , '경기도' <!-- 주소값 안넘어감 -->
		  , #{r_booking_pay}
		  , '3'	<!-- 인원 -->
		  , #{r_booking_phone} <!-- 수식으로계산되는 문제 -->
		  , #{r_booking_trv}
		  , #{usno}
		  , '1'	<!-- 방등록 되면 방 번호 따오기 -->
		  , #{r_bus_code}
		  , '사업장이름' <!-- 왜안됨 -->
		  )
	</insert>
	
	<insert id="insertBookingTour">
		INSERT
		  INTO TOUR_BOOKING
		  (
		  	T_BOOKING_NO
		  ,	T_BUS_NAME
		  , T_PRODUCT_NAME
		  , T_BOOKING_DATE
		  , T_BOOKING_MODIFY
		  , T_BOOKING_ADDRESS
		  , T_BOOKING_PAY
		  , T_BOOKING_NUMBER
		  , T_BOOKING_PHONE
		  , T_TOUR_DATE
		  , US_NO
		  , PRO_NO
		  , BUS_CODE		  
		  )
		  VALUES
		  (
		  	BOOKING_NO.NEXTVAL
		  , '사업장이름' <!-- 왜안됨 -->
		  , #{t_booking_product}
		  , SYSDATE
		  , DEFAULT
		  , '경기도' <!-- 주소값 안넘어감 -->
		  , #{t_booking_pay}
		  , '3'	<!-- 인원 -->
		  , #{t_booking_phone} <!-- 수식으로계산되는 문제 -->
		  , #{t_booking_trv}
		  , #{usno}
		  , '1'	<!-- 상품번호 따오기 -->
		  , #{t_bus_code}
		  )
	</insert>
	
	<insert id="insertBookingCar">
		INSERT
		  INTO TOUR_BOOKING
		  (
		  	C_BOOKING_NO
		  ,	C_BUS_NAME
		  , C_PRODUCT_NAME
		  , C_BOOKING_DATE
		  , C_BOOKING_MODIFY
		  , C_BOOKING_ADDRESS
		  , C_BOOKING_PAY
		  , C_BOOKING_NUMBER
		  , C_BOOKING_PHONE
		  , C_TOUR_DATE
		  , US_NO
		  , RENT_NO
		  , BUS_CODE		  
		  )
		  VALUES
		  (
		  	BOOKING_NO.NEXTVAL
		  , '사업장이름' <!-- 왜안됨 -->
		  , #{C_booking_product}
		  , SYSDATE
		  , NULL
		  , '경기도' <!-- 주소값 안넘어감 -->
		  , #{C_booking_pay}
		  , '3'	<!-- 인원 -->
		  , #{C_booking_phone} <!-- 수식으로계산되는 문제 -->
		  , #{C_booking_trv}
		  , #{usno}
		  , '1'	<!-- 상품번호 따오기 -->
		  , #{C_bus_code}
		  )
	</insert>
	
	<select id="findPoint" parameterType="Point" resultMap="pointResultSet">
		SELECT *
		FROM (
		        SELECT *
		        FROM POINT
		        WHERE US_NO = #{usno}
		        ORDER BY PDATE DESC
      		 )
		WHERE 
				ROWNUM = 1
	</select>
   
   <!-- 지혜 -->
   <select id="selectBannerAdImgList" resultMap="AllianceResultSet">
		SELECT
                        AL_NO, BUS_CODE, A_IMG_CNAME
		FROM    
				         ALLIANCE, "USER"
		WHERE 	 
				          "USER".US_NO = ALLIANCE.US_NO
		AND               "USER".PBALANCE <![CDATA[<>]]> 0
		AND              ALSTATUS = 'Y'
		GROUP BY AL_NO, BUS_CODE, A_IMG_CNAME
   </select>
   
   <select id="selectBannerAdDetail" parameterType="_int" resultMap="BusinessResultSet">
		SELECT
			    BUS_CODE
			  , US_NO
			  , BUS_NAME
			  , BUS_ADDRESS
			  , BUS_INTRO
			  , BUS_DATE
			  , BUS_MODIFY
			  , AD_COUNT
			  , BUS_CLASSIFY
			  , BUS_CATEGORY
			  , BUS_STATUS
			  , BUS_PHONE
			  , RES_CATEGORY
			  , BUS_OPENING
		  FROM
			   BUSINESS
	     WHERE
	     	   BUS_CODE = #{bus_code}
	</select>
	
	<update id="updateReadCount" parameterType="_int">
		UPDATE
				BUSINESS
			SET
				AD_COUNT = AD_COUNT + 1
		  WHERE
		  		BUS_CODE = #{bus_code}
	</update>
	
	<insert id="insertPointDeduction" parameterType="Business">
		INSERT
			INTO 
			POINT
		(
			PNO
		  , PDATE
		  , PDETAIL
		  , PBALANCE
		  , PAMOUNT
		  , US_NO
		)
		VALUES
		(
			PON_SEQ_NO.NEXTVAL
		  , SYSDATE
		  , '배너광고 포인트 차감'
		  , (SELECT *
                FROM(SELECT 
                			 POINT.PBALANCE
                       FROM 
                       		 "POINT"
                       WHERE 
                             US_NO = #{us_no}
                    ORDER BY PBALANCE)
              WHERE ROWNUM <![CDATA[<=]]> 1) - 100
		  , 100
		  , #{us_no}
		)
	</insert>
	
	<select id="selectBusCodeUser" parameterType="Business" resultMap="BusinessResultSet">
		SELECT
			    BUS_CODE
			  , US_NO
			  , BUS_NAME
			  , BUS_ADDRESS
			  , BUS_INTRO
			  , BUS_DATE
			  , BUS_MODIFY
			  , AD_COUNT
			  , BUS_CLASSIFY
			  , BUS_CATEGORY
			  , BUS_STATUS
			  , BUS_PHONE
			  , RES_CATEGORY
			  , BUS_OPENING
		  FROM
			   BUSINESS
	     WHERE
	     	   BUS_CODE = #{bus_code}
	</select>
	
	<select id="getBusDetail" parameterType="Business" resultMap="BusinessResultSet">
		SELECT
			    BUS_CODE
			  , US_NO
			  , BUS_NAME
			  , BUS_ADDRESS
			  , BUS_INTRO
			  , BUS_DATE
			  , BUS_MODIFY
			  , AD_COUNT
			  , BUS_CLASSIFY
			  , BUS_CATEGORY
			  , BUS_STATUS
			  , BUS_PHONE
			  , RES_CATEGORY
			  , BUS_OPENING
		  FROM
			   BUSINESS
	     WHERE
	     	   BUS_CODE = #{bus_code}
	</select>
	
	<update id="insertPointColumn" parameterType="Business">
		UPDATE
				"USER"
			SET
				PBALANCE = (SELECT *
                			 FROM(SELECT POINT.PBALANCE 
                          		  FROM 
                       		           POINT
                                  WHERE 
                                  US_NO = #{us_no}
                    		      ORDER BY PBALANCE)
              WHERE ROWNUM <![CDATA[<=]]> 1)
		WHERE
		US_NO = #{us_no}
	</update>

	
	
</mapper>